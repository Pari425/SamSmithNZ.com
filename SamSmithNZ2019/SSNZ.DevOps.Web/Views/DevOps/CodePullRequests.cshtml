@using SSNZ.DevOps.Web.Models
@{
    ViewBag.Title = "Manage a pull request";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-md-12">
        <ul class="breadcrumb">
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li>@Html.ActionLink("DevOps", "Index", "DevOps")</li>
            <li class="active">@ViewBag.Title</li>
        </ul>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">
                    @ViewBag.Title
                </h3>
            </div>
            <div class="panel-body">
                @Html.Partial("PartialViews/_DevOpsMenu", new DevOpsMenu2ViewModel(null, new DevOpsMenuViewModel(false, false, false, false, true, false, false, false), null, null, null))
                <hr />

                <a name="1" class="anchor"></a>
                <h3>Managing a Pull Request</h3>
                <div>
                    <b>Pull requests are useful to help manage the process of merging a feature branch back to the master branch.</b>Talk about the awesome workflow. Occasionally, there will be a merge conflict - you should use the same workflow as a branch conflict to resolve this and then push your changes<br /><br />

                    After pushing your code, there are a number of places you can initialize a pull request. If it's pushing a new branch, Visual Studio often (but not always), can prompt you. Otherwise, in the code section of your project, you can click the "Create pull request" button or you will often see these links appearing offering to create the pull request.<br />
                    <img src="~/images/DevOps/Code/CreateAPullRequest.png" class="DevOpsImage" /><br /><br />

                    In the new pull request popup, the most important information here is the feature branch and the destination branch you are merging into. If you are using a develop or sprint branch, this will be used instead of master, but this is not recommended for efficent DevOps. You can also update the title here, add some descriptive details and add additional reviewers or work items - that aren't already triggered from branch policies we set earlier<br />
                    <img src="~/images/DevOps/Code/NewPullRequest.png" class="DevOpsImage" /><br /><br />

                    Once the pull request is created, a build will automatically kick off, and the code reviewers will be sent notifications. Within the pull request, any changes are displayed (almost) instantly on the Overview tab, or you can browse the files, updates and commits in their respective tabs. You can also add comments about anything. Anything at all.<br />
                    <img src="~/images/DevOps/Code/PullRequest1.png" class="DevOpsImage" /><br />
                    <hr />

                    With the pull request reviewed, no merge conflicts, and a valid build, the pull request is ready to be completed. Just click the blue complete button in the top right<br />
                    <img src="~/images/DevOps/Code/CompletedPullRequest.png" class="DevOpsImage" /><br /><br />

                    This popup has 3 checkboxes that are worth looking at a little closer
                    <ul>
                        <li><b>Complete linked work items after merging:</b> This updates the work item to be completed. I recommend this be checked nearly all of the time.</li>
                        <li><b>Delete CodeReviewDocs after merging:</b> This deletes the branch - after all, we are all done with our work! Note that the branch still exists on your local repository on your laptop, and you need to manually delete that. I recommend this be checked.</li>
                        <li><b>Squash changes when merging:</b> This option combines all of your commits into one single commit, cleaning up the git history so much. This is primarily useful when there has been a lot of back and forth after a code review. I recommend this be checked.</li>
                    </ul>
                    <img src="~/images/DevOps/Code/CompletingThePullRequestConfirmation.png" class="DevOpsImage" /><br /><br />

                    Finally, click complete and the pull request is complete, the feature request is merged into the master branch. Usually this kicks off a new build on the master branch and an automated deployment. Congratulations!<br />
                    <hr />

                    <a name="3" class="anchor"></a>
                    <b>Further reading:</b>
                    <ul>
                        <li><a href="https://docs.microsoft.com/en-us/vsts/git/concepts/pull-requests-overview" target="_blank">Pull requests [Microsoft.com documentation]</a></li>
                        <li><a href="https://docs.microsoft.com/en-us/vsts/git/tutorial/pullrequest" target="_blank">Create a pull request [Microsoft.com documentation]</a></li>
                        <li><a href="https://docs.microsoft.com/en-us/vsts/git/merging-with-squash" target="_blank">Squash merge pull requests [Microsoft.com documentation]</a></li>
                    </ul>

                </div>
                <hr />

                <a name="4" class="anchor"></a>
                <b>Version history:</b>
                <ul>
                    <li>1-Nov-2017: Added new section</li>
                </ul>
            </div>
        </div>
    </div>
</div>