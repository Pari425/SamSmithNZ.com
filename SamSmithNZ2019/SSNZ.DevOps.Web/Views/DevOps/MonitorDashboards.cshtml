@using SSNZ.DevOps.Web.Models
@{
    ViewBag.Title = "Setting up Application Insights";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-md-12">
        <ul class="breadcrumb">
            <li>@Html.ActionLink("Home", "Index", "Home")</li>
            <li>@Html.ActionLink("DevOps", "Index", "DevOps")</li>
            <li class="active">@ViewBag.Title</li>
        </ul>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">
                    @ViewBag.Title
                </h3>
            </div>
            <div class="panel-body">
                @Html.Partial("PartialViews/_DevOpsMenu", new DevOpsMenu2ViewModel(null, null, null, null, new DevOpsMenuViewModel(false, false, true, false, false, false, false, false)))
                <hr />

                <span class="DevOpsTFSWarning">Note that this page contains only Azure DevOps content. There is no TFS 2015 option.</span><br />

                <a name="1" class="anchor"></a>
                <h3>Overview</h3>
                <b>Azure DevOps offers a Dashboards feature, where we can view a snapshot of our development workflow through builds and releases, as well as monitor released code with Application Insights.</b> These are often referred to as a "Single pane of glass", a management consult where we can see everything about our project, from code to release and monitoring on a single page. Features include:<br />

                <ul>
                    <li>Code: Track branches and pull requests</li>
                    <li>Build: Track builds, test results and code coverage</li>
                    <li>Release: Track releases across environments</li>
                    <li>Monitor: Review analytics via Application Insights</li>
                </ul>

                Below is an example from AppStack, where I can see builds, releases, code coverage metrics, Application Insight analytics, such as the number of failures, failed requests, dependency failures, and work item status. Ultimately, the design your team uses to choose and layout these items is up to you. A general recommendation would to have items for builds, releases, and Application Insight metrics.
                There are a number of metrics that Application Insights provides real time monitoring for.
                <img src="~/images/DevOps/Monitor/AppStackDashboard.png" class="DevOpsImage" /><br /><br />

                <a name="2" class="anchor"></a>
                <h3>How to setup the Application Insights widget</h3>
                Most of the widgets are self-explanatory to add - the exception is the Application Insights widget.<br />
                <ul>
                    <li>
                        <a name="2_1" class="anchor"></a>
                        <b>Step 1: Open API Access in Application Insights in the Azure Portal</b><br />
                        Open the Azure Portal, (<a href="https://portal.azure.com" target="_blank">https://portal.azure.com</a>), and browse to the Application Insight's instance you want to add to your Azure DevOps dashboard. Once open, in the 'Configure' section, find the "API Access" item.<br />
                        <img src="~/images/DevOps/Monitor/AppStackDashboard2.png" class="DevOpsImage" /><br /><br />
                        <br />
                    </li>
                    <li>
                        <a name="2_2" class="anchor"></a>
                        <b>Step 2: Create an API key in API Access</b><br />
                        Before we create an API key, we also need to make note of the Application ID. Copy this for later.
                        <img src="~/images/DevOps/Monitor/AppStackDashboard6.png" class="DevOpsImage" /><br /><br />
                        Click on the "Create API key" button. In the input, enter a description, in this example, the Application Insights instance is for AppStack, so it's named "AppStack_ApplicationInsights_APIKey". Then check the "Read telemetry" checkbox, (leaving the other checkboxes unchecked), and pressed the "Generate key" button.<br />
                        <img src="~/images/DevOps/Monitor/AppStackDashboard3.png" class="DevOpsImage" /><br /><br />
                        This generates a unique key - save this - you need it for the dashboard in the next step. (The key here is a demonstration and can't be used)<br />
                        <img src="~/images/DevOps/Monitor/AppStackDashboard4.png" class="DevOpsImage" /><br /><br />
                        <br />
                    </li>
                    <li>
                        <a name="2_3" class="anchor"></a>
                        <b>Step 3: Back in Azure DevOps, Azure Portal, edit the dashboard. There two widgets to chose from. Select the widget that makes the most sense for your project</b><br />
                        <ul>
                            <li>"Azure Application Insights Charts" creates a box at least size 2x2 with a chart, such as "server response time"</li>
                            <li>"Azure Application Insights Metric" creates a box of size 1x1 and will just show a single number/metric from Application Insights, such as "number of failures".</li>
                        </ul>
                        <img src="~/images/DevOps/Monitor/AppStackDashboard5.png" class="DevOpsImage" /><br /><br />
                        <br />
                    </li>
                    <li>
                        <a name="2_4" class="anchor"></a>
                        <b>Step 4: Adding a chart</b><br />
                        Once a Application Insights Chart widget has been added to the dashboard, click on "configure" link in the top right corner of the widget. In this "Configuration" tab, add the Application ID and API Key we saved on the previous step. Then choose a metric (for example "Server response time"), aggregation ("Avg"), and Time Range ("Last 7 days")<br />
                        <img src="~/images/DevOps/Monitor/AppStackDashboard7.png" class="DevOpsImage" /><br /><br />
                        <br />
                    </li>
                    <li>
                        <a name="2_5" class="anchor"></a>
                        <b>Step 5: Adding a metric</b><br />
                        The configuration for a Application Insights Metric widget is almost identical to the chart, except it will show just one number, instead of a trend.<br />
                        <img src="~/images/DevOps/Monitor/AppStackDashboard8.png" class="DevOpsImage" /><br /><br />
                        <br />
                    </li>
                </ul>
                <hr />

                <a name="3" class="anchor"></a>
                <b>Further reading:</b>
                <ul>
                    <li><a href="https://docs.microsoft.com/en-us/azure/devops/report/dashboards/dashboards?view=vsts&tabs=new-nav">Azure DevOps [Microsoft documentation]</a></li>
                    <li><a href="https://medium.com/myplanet-musings/whats-the-deal-with-single-pane-of-glass-solutions-3b5594a391b8">What’s The Deal With Single Pane Of Glass Solutions?[Medium blog post about the pros and cons]</a></li>
                    <li><a href="https://marketplace.visualstudio.com/items?itemName=ms-appinsights.ApplicationInsightsWidgets">Azure Application Insights Widgets [Marketplace page with documentation]</a></li>
                </ul>
                <hr />


                <a name="4" class="anchor"></a>
                <b>Version history:</b>
                <ul>
                    <li>20-Sep-2018: Initial release of DevOps monitoring dashboard content</li>
                </ul>
            </div>
        </div>
    </div>
</div>