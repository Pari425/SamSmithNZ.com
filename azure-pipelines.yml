trigger:
- master

variables:
   buildConfiguration: Release

resources:
  repositories:
  - repository: MandMCounterRepo # The name used to reference this repository in the checkout step
    type: github
    endpoint: 'GitHub SamSmithNZ connection'
    name: SamSmithNZ/MandMCounter


stages:
  - stage: BuildAndTest
    displayName: Build and test 
    jobs:
      - job: BuildDotNet5
        displayName: 'Build (.NET 5) job'
        pool:
          vmImage: windows-latest
        steps:
        - checkout: self
        - task: UseDotNet@2
          displayName: 'Install .Net 5 SDK'
          inputs:
            packageType: 'sdk'
            version: '5.0.100'
        - task: DotNetCoreCLI@2
          displayName: 'Publish dotnet 5 web projects'
          inputs:
            command: publish
            publishWebProjects: false
            projects: |
             SamSmithNZ/SamSmithNZ.Service/SamSmithNZ.Service.csproj
             SamSmithNZ/SamSmithNZ.Web/SamSmithNZ.Web.csproj
            arguments: '--configuration Release --output $(build.artifactstagingdirectory) --runtime win-x64'
            zipAfterPublish: true
        - task: DotNetCoreCLI@2
          displayName: 'Build utility dotnet 5 projects'
          inputs:
            command: build
            projects: |
             SamSmithNZ/SamSmithNZ.WorldCupGoals.WPF/SamSmithNZ.WorldCupGoals.WPF.csproj
             SamSmithNZ/SamSmithNZ.FFLSetlistScraper.WinForms/SamSmithNZ.FFLSetlistScraper.WinForms.csproj
            arguments: '--configuration Release --output $(build.artifactstagingdirectory) --runtime win-x64'
            zipAfterPublish: true
        
        #database project
        - task: VSBuild@1
          displayName: 'Build database project'
          inputs:
            platform: 'Any CPU'
            configuration: 'Release'
            solution: SamSmithNZ/SamSmithNZ.Database/SamSmithNZ.Database.sqlproj
        - task: CopyFiles@2
          displayName: 'Copy database files to: $(build.artifactstagingdirectory)'
          inputs:
            SourceFolder: '$(system.defaultworkingdirectory)\SamSmithNZ\SamSmithNZ.Database\bin\Output'
            Contents: '*' # * = Copy all files in the current directory
            TargetFolder: '$(build.artifactstagingdirectory)\Database'

        #functional tests
        - task: DotNetCoreCLI@2
          displayName: 'Publish .NET 5 functional tests project'
          inputs:
            command: publish
            publishWebProjects: false
            projects: |
             SamSmithNZ/SamSmithNZ.FunctionalTests/SamSmithNZ.FunctionalTests.csproj
            arguments: '--configuration Release --output $(build.artifactstagingdirectory)/FunctionalTests --runtime win-x64'
            zipAfterPublish: false
        - task: CopyFiles@2
          displayName: 'Copy Selenium Files to: $(build.artifactstagingdirectory)/FunctionalTests/SamSmithNZ.FunctionalTests'
          inputs:
            SourceFolder: 'SamSmithNZ/SamSmithNZ.FunctionalTests/bin/Release/net5.0'
            Contents: '*chromedriver.exe*'
            TargetFolder: '$(build.artifactstagingdirectory)/FunctionalTests/SamSmithNZ.FunctionalTests'

        #publish files
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact'
          inputs:
            PathtoPublish: '$(build.artifactstagingdirectory)'

      - job: TestDotNet5
        displayName: 'Testing (.NET 5) job'
        pool:
          vmImage: windows-latest
        steps:
        - checkout: self
        - task: UseDotNet@2
          displayName: 'Install .Net 5 SDK'
          inputs:
            packageType: 'sdk'
            version: '5.0.100'
        - task: DotNetCoreCLI@2
          displayName: 'Test dotnet 5 projects'
          inputs:
            command: test
            projects: |
              SamSmithNZ/SamSmithNZ.Tests/SamSmithNZ.Tests.csproj
            arguments: '--configuration debug --logger trx --collect "Code coverage" --settings:$(Build.SourcesDirectory)\SamSmithNZ/SamSmithNZ.Tests\CodeCoverage.runsettings'

      - job: BuildAndTestMandMProject
        pool:
          vmImage: windows-latest
        steps:
        - checkout: MandMCounterRepo
        - task: DotNetCoreCLI@2
          displayName: Test
          inputs:
            command: test
            projects: '**/MandMCounter.Tests.csproj'
            arguments: '--configuration release'
        - task: DotNetCoreCLI@2
          displayName: Publish
          inputs:
            command: publish
            publishWebProjects: false
            projects: '**/MandMCounter.Service.csproj'
            arguments: '--configuration release --output $(build.artifactstagingdirectory)'
            zipAfterPublish: True
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact'
          inputs:
            PathtoPublish: '$(build.artifactstagingdirectory)'

  - stage: Deployment
    displayName: Deployment
    #condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
    dependsOn: BuildAndTest
    jobs:
      - job: DeployToSlots
        displayName: 'Deploy web service'
        pool:
          vmImage: windows-latest       
        steps:
        - task: DownloadBuildArtifacts@0
          displayName: 'Download the build artifacts'
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'drop'
            downloadPath: '$(build.artifactstagingdirectory)'
        - task: AzureCLI@2
          displayName: 'Deploy infrastructure with ARM templates'
          inputs:
            azureSubscription: 'SamSmithNZ VS Azure Connection'
            scriptType: ps
            scriptPath: $(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\PowerShell\DeployInfrastructureWebService.ps1
            arguments: -appPrefix "samsapp" -environment "prod" -webAppEnvironment "prod" -resourceGroupName "SSSandbox" -resourceGroupLocation "East US" -resourceGroupLocationShort "eu" -dataKeyVaultName "tbd" -templatesLocation "$(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\Templates" -sqlDatabaseName "ssnzdb" -sqlAdministratorLoginUser "" -sqlAdministratorLoginPassword ""
          enabled: "false"
        - task: AzureRmWebAppDeployment@3
          displayName: 'App Service Deploy: web service'
          inputs:
            azureSubscription: 'SamSmithNZ VS Azure Connection'
            WebAppName: 'ssnz-prod-eu-service'
            ResourceGroupName: 'SSSandbox'
            DeployToSlotFlag: true
            SlotName: 'staging'
            Package: '$(build.artifactstagingdirectory)/drop/SamSmithNZ.Service.zip'
            RemoveAdditionalFilesFlag: true
            TakeAppOfflineFlag: true
            RenameFilesFlag: true
            JSONFiles: '**/appsettings.json'
            #AppSettings: '-ASPNETCORE_ENVIRONMENT "Development"'
        - task: AzureRmWebAppDeployment@3
          displayName: 'App Service Deploy: website'
          inputs:
            azureSubscription: 'SamSmithNZ VS Azure Connection'
            WebAppName: 'ssnz-prod-eu-web'
            ResourceGroupName: 'SSSandbox'
            DeployToSlotFlag: true
            SlotName: 'staging'
            Package: '$(build.artifactstagingdirectory)/drop/SamSmithNZ.Web.zip'
            RemoveAdditionalFilesFlag: true
            TakeAppOfflineFlag: true
            RenameFilesFlag: true
            JSONFiles: '**/appsettings.json'
            #AppSettings: '-ASPNETCORE_ENVIRONMENT "Development"'
        - task: AzureRmWebAppDeployment@3
          displayName: 'App Service Deploy: MandMCounter web service'
          inputs:
            azureSubscription: 'SamSmithNZ VS Azure Connection'
            WebAppName: 'mandm-prod-eu-service'
            ResourceGroupName: 'SSSandbox'
            #DeployToSlotFlag: true
            #SlotName: 'staging'
            Package: '$(build.artifactstagingdirectory)/drop/MandMCounter.Service.zip'
            RemoveAdditionalFilesFlag: true
            TakeAppOfflineFlag: true
            RenameFilesFlag: true
            JSONFiles: '**/appsettings.json'
            #AppSettings: '-ASPNETCORE_ENVIRONMENT "Development"'
        - task: SqlAzureDacpacDeployment@1
          displayName: 'Azure SQL dacpac publish'
          inputs:
            azureSubscription: 'SamSmithNZ VS Azure Connection'
            ServerName: 'ssnzdbserver.database.windows.net'
            DatabaseName: 'SSNZDB'
            SqlUsername: 'ssnzadmin'
            SqlPassword: 'LittleRedDrag0n14'
            DacpacFile: '$(build.artifactstagingdirectory)/drop/Database/SamSmithNZ.Database.dacpac'
            additionalArguments: '/p:BlockOnPossibleDataLoss=true'


      - job: RunSmokeTests
        displayName: Run smoke tests on staging slots
        dependsOn: DeployToSlots
        pool:
          vmImage: windows-latest     
        steps:
        - task: DownloadBuildArtifacts@0
          displayName: 'Download the build artifacts'
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'drop'
            downloadPath: '$(build.artifactstagingdirectory)'
        - task: UseDotNet@2
          displayName: 'Install .Net 5 SDK'
          inputs:
            packageType: 'sdk'
            version: '5.0.100'
        - task: VSTest@2
          displayName: 'Run functional smoke tests on website and web service'
          inputs:
            searchFolder: '$(build.artifactstagingdirectory)'
            testAssemblyVer2: |
              **\SamSmithNZ.FunctionalTests\SamSmithNZ.FunctionalTests.dll
            uiTests: true
            runSettingsFile: '$(build.artifactstagingdirectory)/drop/FunctionalTests/SamSmithNZ.FunctionalTests/test.runsettings'
            overrideTestrunParameters: |
              -ServiceUrl "https://ssnz-prod-eu-service-staging.azurewebsites.net/" 
              -WebsiteUrl "https://www.samsmithnz.com/"  
      - job: SwapStagingSlotsToProd
        displayName: Swap staging slots to prod
        dependsOn: RunSmokeTests
        steps:
        - task: AzureAppServiceManage@0
          displayName: 'Swap Slots: web service'
          inputs:
            azureSubscription: 'SamSmithNZ VS Azure Connection'
            WebAppName: 'ssnz-prod-eu-service'
            ResourceGroupName: 'SSSandbox'
            SourceSlot: 'staging'
        - task: AzureAppServiceManage@0
          displayName: 'Swap Slots: web'
          inputs:
            azureSubscription: 'SamSmithNZ VS Azure Connection'
            WebAppName: 'ssnz-prod-eu-web'
            ResourceGroupName: 'SSSandbox'
            SourceSlot: 'staging'
